static void nextMove(int n, int r, int c, String [] grid){
    //Determine bot and princess position
    int botx=r,boty=c, princessx=0,princessy=0;
    
    for(int i=0;i<n; i++)
    {
     if(grid[i].indexOf('p') > -1)
     {
     princessx=i;
     princessy=grid[i].indexOf('m');
     break;
     }
    }

    
    //Select vertical direction to move
    int vertical =0; // 1 for down and -1 for up 0 for no movement
    if(princessy != boty)
    {
     if(princessy > boty)
     vertical =1;
    }
    else
    {
     if(princessy < boty)
     vertical = -1;
    
    }
    //Select horizontal direction to move
    int horizontal =1; // 1 for right and -1 for left
    if(princessx != botx)
    {
     if(princessx > botx)
     horizontal =1;
    }
    else
    {
     if(princessx < botx)
     horizontal = -1;
    
    }
    //System.out.println(vertical +" "+ horizontal);
    //Move vertically
    if(vertical ==1)
    {
     for (int i = boty; i < grid.length -1 ; i++) {
System.out.println("UP");
}
    }
    else
    {
     for (int i = boty; i > 0; i--) {
System.out.println("DOWN");
}
    }
    //Move Horizontally
    if(horizontal ==1)
    {
     for (int i = botx; i < grid.length-1 ; i++) {
System.out.println("LEFT");
}
    }
    else
    {
     for (int i = botx; i > 0; i--) {
System.out.println("RIGHT");
}
    }
  }
private static boolean botIsAtMiddle(int botx, int boty, int n) {
if(((n-1)/2) == botx && ((n-1)/2) == boty)
return true;
return false;
}
